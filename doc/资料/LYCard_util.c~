#include "string.h"
#include "LYCard_util.h"

/*
功能：
    
参数：
    
返回值：
    
*/
bool TryStr2Int(int *result,const char *str){
    int res=0;
    char *p=str;
    while(*p){
        if('0'<=*p && *p<='9'){
            res=res*10+(*p-'0');
            p++;
        }
        else if(*p=='.'){
            break;
        }
        else{
            return false;
        }
    }
    *result=res;
    return true;
}

/*
功能：
    
参数：
    
返回值：
    
*/
char* Int2Str(char *str,const int value){
    int v=value;
    char *p=str;

    while(v>0){
        (*p++)=v%10;
        v=v/10;
    }
    *p=0;

    StringReverse(str);
    return str;
}

/*
功能：
    
参数：
    
返回值：
    
*/
char* Char2Hex(char *str,const char value){
    char tmp=0;

    tmp=(value>>4) & 0xF;
    if('0'<=tmp && tmp <= '9'){
        tmp=tmp+'0';
    }else{
        tmp=tmp-10+'A';
    }
    *str=tmp;

    tmp=value & 0xF;
    if('0'<=tmp && tmp <= '9'){
        tmp=tmp+'0';
    }else{
        tmp=tmp-10+'A';
    }
    *(str+1)=tmp;
    
    *(str+2)=0;
    return str;
}

/*
功能：
    将浮点数转化位字符串
参数：
    str:字符串保存地址
    float：待转化的浮点数
    count:保留小数点后的位数
返回值：
    字符串的首地址
*/
char *Float2Str(char *str,const float f,const int count){
    float tf=f;
    int tc=count;
    char *p=0;
 
    while(tc){
        tf=tf*10;
        --tc;
    }
    Int2Str(str,(const int)tf);
    
    *p=str+strlen(str);
    tc=count+1;//count个数字和字符串尾部的0
    while(tc){
        *(p+1)=*p;
        p--;
        tc--;
    }
    *(p+1)='.';

    return str;
}

/*
功能：
    
参数：
    
返回值：
    
*/
char *Trim(char *str){
    char *p=0;
    char *q=0;
    char *lower=*str;
    char *upper=str+strlen(str)-1;
    
    while(*lower==' '){
        lower++;
    }
    while(*upper==' ')
        upper--;
    *(upper+1)=0;
    
    p=str;
    q=lower;
    while(q<=upper){
        (*p++)=(*q++);
        
    }
    *p=0;
    return str;
}

/*
功能：
    
参数：
    
返回值：
    
*/
char *InsertNChar(char *str,char ch,int begin,int length){
    int index;
    char *p=0;
    
    if(begin>strlen(str)){
        begin=strlen(str);
    }

    p=str+strlen(str);//指向字符串的结束标志(\0)
    for(index=strlen(str)+length;index>=begin+length;index--){
        *(str+index)=*(str+index-1);
    }

    for(index=begin+length-1;index>=begin;index--){
        *(str+index)=ch;
    }
    return str;
}

/*
功能：
    
参数：
    
返回值：
    
*/
char *StringNCopy(char *des,const char *src,int begin,int count){
    int index;
    char *p=des;
    
    for(index=begin;index<begin+count;index++){
        *p++=*(src+index);
    }
    *p=0;
    return des;
}

/*
功能：
    
参数：
    
返回值：
    
*/
char* StringReverse(char *str){
    char* lower=str;
    char* upper=str+strlen(str)-1;
    char tmp=0;
    
    while(lower<upper){
        tmp=*lower;
        *lower=*upper;
        *upper=tmp;

        ++lower;
        --upper;
    }
    return str;
}
